@using Cotecna.Vestalis.Core
@using Cotecna.Vestalis.Web.Common

@model ChangePasswordModel

@{
    ViewBag.Title = "Vestalis";
}


@section headerContent{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" media="screen,print" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/jquery.ui.selectmenu.css")" media="screen,print" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.8.20.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.ui.selectmenu.js")"></script>
    @*Used for comboboxes*@
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.ezmark.min.js")"></script>
    @*Used for radios and checks*@
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
}

<div id="Breadcrumbs">
    <div class="cap-left">
    </div>
    <ul>
        <li class="last">@Resources.Administration.ChangePasswordTitle</li>
    </ul>
    <div class="cap-right">
    </div>
</div>

@{
    string serviceOrderName = Session["PrincipalFormName"].ToString();
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#serviceOrderLink").html("@serviceOrderName");


        $("#form1").validate({
        errorElement: "span",
        errorClass: "error",
        rules:{
            OldPassword :{
                required: true,
                minlength : '@AuthorizationBusiness.Instance.MinPasswordLength'
            },
            NewPassword :{
                required: true,
                minlength: '@AuthorizationBusiness.Instance.MinPasswordLength'
            },
            ReNewPassword :{
                required: true,
                minlength: '@AuthorizationBusiness.Instance.MinPasswordLength',
                equalTo: "#NewPassword"
            }
        },
        messages: {
            OldPassword: {
                required: "@Resources.ServiceOrder.MandatoryFieldValidationMessage",
                minlength: "@Resources.Administration.MinLegthPassword"
            },
            NewPassword: {
                required: "@Resources.ServiceOrder.MandatoryFieldValidationMessage",
                minlength: "@Resources.Administration.MinLegthPassword"
            },
            ReNewPassword: {
                required: "@Resources.ServiceOrder.MandatoryFieldValidationMessage",
                minlength: "@Resources.Administration.MinLegthPassword",
                equalTo: "@Resources.Administration.NotEqualPassword"
            }
        },
        success: function (span) {
        },
        errorPlacement: function (error, element) {
            var span = element.prev('span');
            error.appendTo(span)
        },
        highlight: function (element, errorClass) {
            var li = $(element).closest('li');
            $(li).addClass(errorClass);
        },
        unhighlight: function (element, errorClass, validClass) {
            var li = $(element).closest('li');
            $(li).removeClass(errorClass);
        },
        invalidHandler: function (event, validator) {
            var a = validator.errorList[0].element.id;
            $('#' + a).focus();
        }
        });
    });
</script>
@if (Model.UserType == 1 || Model.UserType == 2)
{
<script type="text/javascript">
    $(function () {
        $("#cancelButton").click(function () {
            window.location = '@Url.Action("Index","Catalogue")';
        });
        $("#Content").width(915);
    });
</script>
}
@if (Model.UserType > 2)
{
<script type="text/javascript">
    $(function () {
        $("#cancelButton").click(function () {
            window.location = '@Url.Action("Index","ServiceOrder")';
        });
        $("#Content").width(915);
    });
</script>
}

<h1>@Resources.Administration.ChangePasswordTitle</h1>

@using (Html.BeginForm("SaveChangePassword", "Account", FormMethod.Post, new { id = "form1" }))
{
    
    <input type="hidden" id="UserName" name="UserName" value="@Model.UserName" />
    <input type="hidden" id="UserType" name="UserType" value="@Model.UserType" />
    
    <div class="form product">
        
        <ol>
            <li>
                <label>
                    <span class="name">@Resources.Administration.OldPassword</span>
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "txt" })
                </label>
            </li>
            <li>
                <label>
                    <span class="name">@Resources.Administration.NewPassword</span>
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "txt" })
                </label>
            </li>
            <li>
                <label>
                    <span class="name">@Resources.Administration.ReTypeNewPassword</span>
                    @Html.PasswordFor(m => m.ReNewPassword, new { @class = "txt" })
                </label>
            </li>
        </ol>
    </div>
     <p class="btn">
        <span class="btn">
            <input type="submit" value="@Resources.Common.Save" id="saveButton" />
        </span>
        <span class="btn2">
            <input type="reset" value="@Resources.Common.Cancel" id="cancelButton" />
        </span>
    </p>
     <div class="form"> 
        @Html.LocalValidationSummary()
    </div>
}
